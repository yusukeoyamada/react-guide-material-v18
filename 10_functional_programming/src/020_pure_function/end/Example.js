const Example = () => {
  // 関数型（純粋関数）
  // POINT 数式のようなもの: fn(決まった引数) -> 決まった戻り値
    // 関数外の状態（データ）は、参照・変更しない。
    // 関数外に影響を及ぼさない。
    // 引数で渡された値を変更しない。
      // 不変性()
    // 上記の要件を満たさない操作は「副作用」と呼ぶ。

  const val1 = 3, val2 = 9;
  let result;
  const add = (val1) => {
    // 以下理由により、当該関数は、純粋関数でない。
      // 関数外で設定されている、val2が使用されている(引数で指定されていない)。
      // 関数外で定義されたresultの値が変更されているので、関数外に影響がある。
      // console.logにより、関数外に影響がある。
    // ただ、関数外の定数を使用することが、純粋関数を否定するものではない。
    console.log(val1);
    result = val1 + val2;
    return val1 + val2;
  }

  return (
    <>
      <div>純粋関数:{add(val1)}</div>
    </>
  );
};

export default Example;
